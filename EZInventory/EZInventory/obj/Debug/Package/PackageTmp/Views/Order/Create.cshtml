 @model EZInventory.Model.Order

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(function () {
        $('#shiptoid').prop('disabled', 'disabled');
        $('#inventoryid').prop('disabled', 'disabled');
        $('#qty').prop('disabled', 'disabled');
        $("#more").hide();
        $("#billtoid").change(function () {
            $('#shiptoid').prop('disabled', false);
            $('#inventoryid').prop('disabled', false);
            $('#shiptoid').empty();
            $('#inventoryid').empty();

            $.ajax({
                cache: false,
                type: "POST",
                dataType: 'json',
                url: "/company/getshiptos/" + $(this).val(),
                success: function (shiptos) {
                    $("#shiptoid").append('<option value=""></option>');
                    $.each(shiptos, function (i, s2) {
                        $("#shiptoid").append('<option value="' + s2.Value + '">' +
                             s2.Text + '</option>');
                        // here we are adding option for States
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve states.');
                    //statesProgress.hide();
                }
            });

            $.ajax({
                cache: false,
                type: "POST",
                dataType:'json',
                url: "/inventory/getinv/" + $(this).val(),
                success: function (inventories) {
                    $("#inventoryid").append('<option value=""></option>');
                    $.each(inventories, function (i, inv) {
                        $("#inventoryid").append('<option value="' + inv.Value + '">' +
                             inv.Text + '</option>');
                        // here we are adding option for States
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //alert('Failed to retrieve states.');
                    //statesProgress.hide();
                }
            });
        });


        $("#inventoryid").change(function () {
            $('#qty').empty();
            $('#qty').prop('disabled', false);
            $.ajax({
                 cache: false,
                 type: "GET",
                 url: "/inventory/getqty/"+$(this).val(),
                 success: function (data) {
                     $("#max").text("Max:" + data);
                     $("#more").show();
                     //$("#qty").append('<option value=""></option>');
                     //for (var i = 1; i <= data; i++) {
                     //    $("#qty").append($('<option></option>').val(i).html(i));
                     //}
                        //$.each(data, function (id, option) {
                        //    $("#qty").append($('<option></option>').val(option.val).html(option.val));
                        //});
                        //statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        //alert('Failed to retrieve states.');
                        //statesProgress.hide();
                    }
                });
        });

        $("#storeid").change(function () {
            $('#inventoryid').prop('disabled', false);
            $('#qty').prop('disabled', false);
        });


        $("#qty").change(function () {
            //$('tr:has(td:contains("' + $("#inventoryid option:selected").text() + '"))').remove();//Remove existing inventory if any for proper order
            //var uuid = guid();
            ////$("#invHidden").append("<input type='hidden' name='hdnInventory' value='" + $("#inventoryid").val() + ":" + $("#qty").val() + "'/>");
            //$("#invTable").append("<tr id='"+uuid+"'><td>" + $("#inventoryid option:selected").text() + "</td><td>" + $("#qty").val() +
            //                      "</td><td><span class='delete' onclick=\"javascript:DeleteItem('" + uuid + "');\">DELETE</span>" +
            //                      "<input type='hidden' name='hdnInventory' value='" + $("#inventoryid").val() + ":" + $("#qty").val() + "'/></td></tr>");
            //                        //"</td><td><p id=\"demo\" onclick=\"myFunction()\">Click me to change my text color.</p></td></tr>");
            //$("#divList").show();
            //$("#inventoryid").val('');
            //$("#qty").val('');
        });


    });

    function DeleteItem(id) {
        $("#" + id).remove();
        if ($("input[name=hdnInventory]").length == 0) {
            $("#divList").hide();
        }
    }

    function AddMore(){
        $('tr:has(td:contains("' + $("#inventoryid option:selected").text() + '"))').remove();//Remove existing inventory if any for proper order
        var uuid = guid();
        //$("#invHidden").append("<input type='hidden' name='hdnInventory' value='" + $("#inventoryid").val() + ":" + $("#qty").val() + "'/>");
        $("#invTable").append("<tr id='" + uuid + "'><td>" + $("#inventoryid option:selected").text() + "</td><td>" + $("#qty").val() +
                              "</td><td><span class='delete' onclick=\"javascript:DeleteItem('" + uuid + "');\">DELETE</span>" +
                              "<input type='hidden' name='hdnInventory' value='" + $("#inventoryid").val() + ":" + $("#qty").val() + "'/></td></tr>");
        //"</td><td><p id=\"demo\" onclick=\"myFunction()\">Click me to change my text color.</p></td></tr>");
        $("#divList").show();
        $("#inventoryid").val('');
        $("#qty").val('');
    }

    var guid = (function () {
        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                       .toString(16)
                       .substring(1);
        }
        return function () {
            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
                   s4() + '-' + s4() + s4() + s4();
        };
    })();

 </script> 
<h2><a href="/Order">Orders</a> :: New</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

        @Html.Hidden("statusid","1")
        @Html.Hidden("date",DateTime.Now)
        
        <div>
            <div class="EZField b">Bill To</div>
            <div class="EZField" style="margin-left:7px; width:300px">@Html.DropDownList("billtoid", String.Empty) <span class="req">*</span>
                    @Html.ValidationMessageFor(model => model.CompanyOrders)
            </div>
        </div>
        <div class="EZRow">
            <div class="EZField b">Ship To</div>
            <div class="EZField" style="margin-left:7px; width:300px; font-weight:400"><select id="shiptoid" name="shiptoid" class="emptyDropdown"><option></option></select> <span class="req">*</span>
                    @Html.ValidationMessageFor(model => model.CompanyOrders)
            </div>
        </div>
    <div style="display:none; position:relative; padding-top:10px; clear:both; width:70%" id="divList">
        <div class="CSSTableGenerator" style="clear:both; min-width:300px">
                <table id="invTable">
                    <tr>
                        <td style="width:70%">
                            Inventory
                        </td>
                        <td style="width:20%">
                            Qty
                        </td>
                        <td style="width:10%">
                        </td>
                    </tr>
                </table>
            </div>
          </div>  
        <div class="EZRow">
            <div class="EZField b">Inventory</div>
            <div class="EZField" style="margin-left:7px; width:400px; font-weight:400"><select id="inventoryid" name="inventoryid" class="emptyDropdown"><option></option></select> <span class="req">*</span>
                @Html.ValidationMessageFor(model => model.OrderDetails)
            </div>
        </div>
        <div class="EZRow">
            <div class="EZField b">Quantity</div>
            <div class="EZField" style="width:300px; margin-left:7px; font-weight:400">@Html.TextBox("qty","", new { @class = "shorty"}) <span class="req">*</span> <span id="max" style="font-size:10px"></span> <span id="more" style="font-size:10px; font-weight:bold"><a href="#" onclick="AddMore()">Add More Inventory</a></span></div>
        </div>
        <div class="EZRow">
            <div class="EZField b">Total Due</div>
            <div class="EZField" style="width:300px;font-weight:400">$@Html.TextBox("rate","", new { @class = "shorty"}) <span class="req">*</span>
            @Html.ValidationMessageFor(model => model.rate)
            </div>
        </div>

        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <p>
            <input type="submit" value="Create" />
        </p>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
